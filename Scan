<#
    .SYNOPSIS
    SNMP Printer Information - Scan of Printers for SNMP Values

    .DESCRIPTION
    This script will take an input from a file of IP addresses and request SNMP values for information.
    The information includes model, manufacturer, name of printer, WS Discover, WS Print, Bonjour, Wi-Fi Direct, Toner level and firmware version.

    The output will be in csv format at the chosen destination.
    Works with HP and RICOH/Lanier printers.
    
    .PARAMETER List
    Enter the path to a file containing IP addresses to be scanned.
    If this option is not configured, it will be requested via console.

    .PARAMETER Output
    Enter the path and filename to the output file. Will create specified .csv if it does not exist.
    If this option is not configured, it will be requested via console.

    .EXAMPLE
    Get-SNMPPrinterInfo -List C:\IPs.txt -Output C:\PrinterStats

    This will prompt each IP address in the IPs.txt file for SNMP values
#>

param(
[Parameter(Mandatory=$True)]
$List,

[Parameter(Mandatory=$True)]
$Output
)

#Get content from file
$printers = Get-Content -Path $List

#Create Objects
$SNMP = New-Object -ComObject olePrn.OleSNMP
$ping = New-Object System.Net.NetworkInformation.Ping

#Table Name
$tabName = "PrinterInfo"

#Create Table Object
$table = New-Object system.Data.DataTable "PrinterInfo"

#Define Columns
$col1 = New-Object System.Data.DataColumn "Date Time", ([string])
$col2 = New-Object System.Data.DataColumn "IP Address", ([string])
$col3 = New-Object System.Data.DataColumn "Online", ([string])
$col4 = New-Object System.Data.DataColumn "Printer Name", ([string])
$col5 = New-Object System.Data.DataColumn "Model", ([string])
$col6 = New-Object System.Data.DataColumn "WSD", ([bool])
$col7 = New-Object System.Data.DataColumn "WSPrint", ([bool])
$col8 = New-Object System.Data.DataColumn "Bonjour", ([bool])
$col9 = New-Object System.Data.DataColumn "Wi-Fi Direct", ([bool])
$col10 = New-Object System.Data.DataColumn "Toner", ([string])
$col11 = New-Object System.Data.DataColumn "Toner S/N", ([string])
$col12 = New-Object System.Data.DataColumn "Firmware Version", ([string])
$col13 = New-Object System.Data.DataColumn "Out of Paper", ([string])
$col14 = New-Object System.Data.DataColumn "Status", ([string])

#Add Columns
$table.Columns.add($col1)
$table.Columns.add($col2)
$table.Columns.add($col3)
$table.Columns.add($col4)
$table.Columns.add($col5)
$table.Columns.add($col6)
$table.Columns.add($col7)
$table.Columns.add($col8)
$table.Columns.add($col9)
$table.Columns.Add($col10)
$table.Columns.Add($col11)
$table.Columns.Add($col12)
$table.Columns.Add($col13)
$table.Columns.Add($col14)


foreach ($printer in $printers){
    
    #Validate Input
    try{$RESULT = $ping.Send($printer)} catch {$RESULT = $null}
    
    #test for timed out connection
    $i = 0
    while($RESULT.Status -eq "TimedOut"){
    Write-Output "$printer failed, reattempting"
    $RESULT = $ping.Send($printer)
    $i++
    if($i -eq 2){
    Write-Output "Connection failed"
    break
        }
    if($RESULT.Status -eq "Success"){Write-Output "Connection Established"}
    }
    
    #check printer status, open SNMP on success
    if($RESULT.Status -eq 'Success'){
        $online = $True

        #Open SNMP Connection to Printer
        $SNMP.open($printer,'public',2,3000)

        #Get model
        try {$model = $SNMP.Get('.1.3.6.1.2.1.25.3.2.1.3.1') } catch {$model = $null}

        #Get Name
        try{$printerName = $SNMP.Get('.1.3.6.1.2.1.1.5.0') } catch {$printerName = $null}

        #Get Manufacturer
        try{$make = $SNMP.Get('.1.3.6.1.2.1.43.8.2.1.14.1.1')} catch{$make = $null}

        #SNMP Status
        try{$status = $SNMP.Get('.1.3.6.1.2.1.25.3.2.1.5.1')} catch {$status = $null}
        $strStatus = Out-String -InputObject $status
        $strStatus = $strStatus.Trim()
        if($strStatus -eq '1'){$strStatus = "Unknown"}
        elseif($strStatus -eq '2'){$strStatus = "Running"}
        elseif($strStatus -eq '3'){$strStatus = "Warning"}
        elseif($strStatus -eq '4'){$strStatus = "Testing"}
        elseif($strStatus -eq '5'){$strStatus = "Unavailable"}
        
        #Create a base row and log row, add base info
        $row."Printer Name" = $printerName
        $row."Model" = $model
        $row."Online" = $online
        $row."Status" = $strStatus
           
            if ($model){

                #HP
               if($make -eq "HP" -or
                  $make -eq "Hewlett-Packard"){
                   #WSDiscovery
                   if($Log){WriteLog "Attempting WS Discover"}
                   $WSD = $SNMP.GetTree('.1.3.6.1.4.1.11.2.4.3.7.36.0') 
                   $strWSD = Out-String -InputObject $WSD
                   #$strWSD = $strWSD.Trim(".iso.org.dod.internet.private.enterprises.11.2.4.3.7.36.0")
                   $strWSD = $strWSD.Trim()
                   if($strWSD -contains '1'){$bWSD = $True}else{$bWSD = $False}
                   $row."WSD" = $bWSD


                   #WSPrint
                   $WSPRINT = $SNMP.GetTree('.1.3.6.1.4.1.11.2.4.3.7.37') 
                   $strWSPRINT = Out-String -InputObject $WSPRINT

                   $strWSPRINT = $strWSPRINT.Trim(".iso.org.dod.internet.private.enterprises.11.2.4.3.7.37.0")
                   $strWSPRINT = $strWSPRINT.Trim()
                   if($strWSPRINT -eq '0'){$bWSP = $False}elseif($strWSPRINT -eq '1'){$bWSP = $True}
                   $row."WSPrint" = $bWSP

                   #Bonjour
                   $BONJOUR = $SNMP.GetTree('.1.3.6.1.4.1.11.2.4.3.7.29')
                   $strBONJOUR = Out-String -InputObject $BONJOUR

                   $strBONJOUR = $strBONJOUR.Trim(".iso.org.dod.internet.private.enterprises.11.2.4.3.7.29.0")
                   $strBONJOUR = $strBONJOUR.Trim()
                   if($strBONJOUR -eq '0'){$bBon = $False}else{$bBon = $True}
                   $row."Bonjour" = $bBon
                   
                   #WiFi Direct
                   try{$WFD = $SNMP.Get('.1.3.6.1.4.1.11.2.4.3.7.74.0')} catch{$WFD = $null}
                        if ($WFD -eq '0' -or
                            $WFD -eq '1'){

                            if($WFD -eq '0'){$bWFD = $False}else{$bWFD = $True}
                            $row."Wi-Fi Direct" = $bWFD
                            try{$WFD = $SNMP.Get('.1.3.6.1.4.1.11.2.4.3.7.74.0')}         catch{WriteLog "$printer : Wi-Fi Direct not responding"}
                            if($WFD -eq 'OFF' -and $Log){WriteLog "Wi-Fi Direct is $WFD"}elseif($Log){WriteLog "Wi-Fi Direct request failed"}

                        }
                        else{
                            $bWFD = $False
                            $row."Wi-Fi Direct" = $bWFD                    
                        }

                   #Toner
                   $Toner = $SNMP.Get('.1.3.6.1.2.1.43.11.1.1.9.1.1')          
                   $strToner = Out-String -InputObject $Toner
                   $row."Toner" = $strToner.Trim()

                   #Toner S/N
                   $TonerSN = $SNMP.Get('.1.3.6.1.4.1.11.2.3.9.4.2.1.4.1.10.1.1.3.1.0')
                   $strTonerSN = Out-String -InputObject $TonerSN
                   $strTonerSN = $strTonerSN.Trim([char]0x0001, [char]0x0015)

                   $strTonerSN = $strTonerSN.Trim()
                   $row."Toner S/N" = $strTonerSN

                   #Firmware
                   $firmware = $SNMP.Get('.1.3.6.1.4.1.11.2.3.9.4.2.1.1.3.5.0')
                   $strFirmware = Out-String -InputObject $firmware
                   $strFirmware = $strFirmware.Trim([char]0x0001, [char]0x0015)

                   $row."Firmware Version" = $strFirmware.Trim()

                   #Paper Out
                   if($Log){WriteLog "Attempting to find Paper"}
                   $paper = $SNMP.Get('.1.3.6.1.2.1.43.16.5.1.2.1.1')
                   $strPaper = Out-String -InputObject $paper
                   $strPaper = $strPaper.Trim()
                   if($strPaper -eq "Load Paper."){$bPaper = $True}else{$bPaper = $False}
                   $row."Out of Paper" = $bPaper 

                   #Add Row
                   $table.Rows.Add($row)
                   }

                #Copier
                 elseif($make -eq 'RICOH' -or
                       $make -eq 'LANIER'){
                
                      #WSD
                    if($Log){WriteLog "Attempting WS Discover"}
                    $WSD = $SNMP.Get('.1.3.6.1.2.1.43.14.1.1.8.1.8')
                    $strWSD = Out-String -InputObject $WSD

                    $strWSD = $strWSD.Trim()
                    if($strWSD -eq '1'){$bWSD = $False}else{$bWSD = $True}
                    $row."WSD" = $bWSD
                    if($Log -and $WSD){WriteLog "WS Discover is $strWSD"} elseif($Log){WriteLog "WS Discover failed"}

                    #WSPrint
                    $WSPRINT = $SNMP.Get('.1.3.6.1.2.1.43.14.1.1.8.1.8')
                    $strWSP = Out-String -InputObject $WSPRINT

                    $strWSP = $strWSP.Trim()
                    if($strWSP -eq '1'){$bWSP = $False}else{$bWSP = $True}
                    $row."WSPrint" = $bWSP

                    #Bonjour
                    try{$BONJOUR = $SNMP.GET(".1.3.6.1.4.1.2699.1.2.1.3.1.1.2.1.7")} 
                    catch{
                        $BONJOUR = $null 
                        $row."Bonjour" = "OFF"
                    }

                    if($BONJOUR){
                    $strBONJOUR = Out-String -InputObject $BONJOUR

                    $strBONJOUR = $strBONJOUR.Trim()
                    if($strBONJOUR -eq '2'){$bBon = $True}else{$bBon = $False}
                    $row."Bonjour" = $bBon
                    }

                    #WFD
                    $bWFD = $False
                    $row."Wi-Fi Direct" = $bWFD

                    #Toner
                    if($Log){WriteLog "Attempting Toner Level"}
                    $Toner = $SNMP.Get('.1.3.6.1.2.1.43.11.1.1.9.1.1') #Black
                    $strToner = Out-String -InputObject $Toner

                    $strToner = $strToner.Trim()
                    $row."Toner" = $strToner
                    
                    #Toner S/N
                    $row."Toner S/N" = ""

                    #Firmware
                    $Firmware = $SNMP.Get('.1.3.6.1.4.1.367.3.2.1.1.1.2.0')
                    $strFirmware = Out-String -InputObject $Firmware

                    $strFirmware = $strFirmware.Trim([char]0x0001, [char]0x0015)
                    $row."Firmware Version" = $strFirmware.Trim()

                    #Paper
                    $paper = $SNMP.Get('.1.3.6.1.2.1.43.8.2.1.10.1.1')
                    $strPaper = Out-String -InputObject $paper
                    $strPaper = $strPaper.Trim()
                    
                    if($strPaper -eq '0'){$bPaper = $True}
                    elseif($strPaper){$bPaper = $False}
                    
                    $row."Out of Paper" = $bPaper

                    $table.Rows.Add($row)
                    }


                elseif($make -eq "Source Technologies"){

                    #WSD
                    $row."WSD" = $False

                    #WSP
                    if($Log){WriteLog "Attempting WS Print"}
                    $WSP = $SNMP.GET('.1.3.6.1.2.1.6.13.1.5.0.0.0.0.65500.0.0.0.0.0')
                    $strWSP = Out-String -InputObject $WSP

                    $strWSP = $strWSP.Trim()
                    if($strWSP -eq "0"){$bWSP = $False}else{$bWSP = $True}
                    $row."WSPrint" = $bWSP

                    #Bonjour
                    if($Log){WriteLog "Attempting Bonjour"}
                    $BONJOUR = $SNMP.GET('.1.3.6.1.4.1.641.1.4.1.0')
                    $strBONJOUR = Out-String -InputObject $BONJOUR
                    $strBONJOUR = $strBONJOUR.Trim()

                    if($strBONJOUR -eq '1'){$bBon = $False}else{$bBon = $True}
                    $row."Bonjour" = $bBon
                    if($Log -and $BONJOUR){WriteLog "Bonjour is $strBONJOUR"} elseif($Log){WriteLog "Bonjour request failed"}

                    #WFD
                    $bWFD = $False
                    $row."Wi-Fi Direct" = $bWFD

                    #Toner Level
                    $Toner = $SNMP.GET('.1.3.6.1.4.1.641.2.1.3.1.6.1')
                    $strToner = Out-String -InputObject $Toner
                    $strToner = $strToner.Trim()

                    if($strToner -eq '1'){$strToner = '100'}elseif($strToner -eq '2'){$strToner = '0'}
                    $row."Toner" = $strToner

                    #TonerSN
                    $TonerSN = $SNMP.Get('.1.3.6.1.4.1.641.6.4.4.1.1.6.1.1')
                    $strTonerSN = Out-String -InputObject $TonerSN
                    $row."Toner S/N" = $strTonerSN

                    #Imaging SN
                    $ImagingSN = $SNMP.Get('.1.3.6.1.4.1.641.6.4.4.1.1.6.1.2')
                    $strImagingSN = Out-String -InputObject $ImagingSN

                    #Firmware
                    $Firmware = $SNMP.Get('.1.3.6.1.4.1.641.2.1.2.1.4.1')
                    $strFirmware = Out-String -InputObject $Firmware
                    $strFirmware = $strFirmware.Trim([char]0x0001, [char]0x0015)

                    $row."Firmware Version" = $strFirmware.Trim()

                    #Out of Paper
                    $paper = $SNMP.Get('.1.3.6.1.4.1.641.2.1.3.1.4.1')
                    $strPaper = Out-String -InputObject $paper
                    $strPaper = $strPaper.Trim()

                    if($strPaper -eq '1'){$bPaper = $False}elseif($strPaper -eq '2'){$bPaper = $True}
                    $row."Out of Paper"=$bPaper

                    #Status
                    $status = $SNMP.Get('.1.3.6.1.4.1.641.2.1.3.1.7.1')
                    $strStatus = Out-String -InputObject $status
                    $strStatus = $strStatus.Trim()

                    if($strStatus -eq '1'){$strStatus = 'Running'}else{$strStatus = 'Error'}
                    $row."Status" = $strStatus

                    $table.Rows.Add($row)

            } 
            elseif($model -eq "Zebra Printer"){

                $model = $SNMP.GET('.1.3.6.1.4.1.683.6.2.3.2.1.15.1')
                $row.'Model' = $model
                #WSD
                $bWSD = $False
                $row."WSD" = $bWSD
                #WSPrint
                $bWSP = $False
                $row."WSPrint" = $bWSP
                #Bonjour
                $bBon = $False
                $row."Bonjour" = $bBon
                #Wi-Fi Direct
                $bWFD = $False
                $row."Wi-Fi Direct" = $bWFD
                #Toner
                $strToner = ''
                $row."Toner"=$strToner

                #Toner S/N
                $strTonerSN = ''
                $row."Toner S/N"=$strTonerSN         

                #Firmware
                $firmware = $SNMP.Get('.1.3.6.1.4.1.683.1.9.0')
                $row."Firmware Version" = $firmware

                #Out of Paper
                $paper = $SNMP.Get('.1.3.6.1.4.1.11.2.3.9.1.1.2.1.0')
                if($paper -eq '1'){$bPaper = $True}elseif($paper -eq '0'){$bPaper = $False}
                $row."Out of Paper" = $bpaper

                #Status
                $status = $SNMP.Get('.1.3.6.1.4.1.683.6.2.3.2.1.3.1')
                $row."Status" = $status
            
                $table.Rows.Add($row)
            }
            #Receipt Printers
            elseif($model -eq 'Epson UB-E03' -or
                    $model -eq 'Epson UB-E04'){

                $printerName = $SNMP.GET('.1.3.6.1.2.1.1.6.0')
                $row.'Printer Name' = $printerName        
                #WSD
                $row."WSD" = $False
                
                #WSP
                $row."WSPrint" = $False

                #Bonjour
                $row."Bonjour" = $False

                #WFD
                $row."Wi-Fi Direct" = $False

                #Toner
                $row."Toner" = ''

                #TonerS/N
                $row."Toner S/N" = ''
                #Firmware
                $firmware = $SNMP.Get('.1.3.6.1.2.1.1.5.0')
                $strFirmware = Out-String -InputObject $firmware
                $strFirmware = $strFirmware.Trim()
                $row."Firmware Version" = $strFirmware

                #Out of Paper
                try{$paper = $SNMP.Get('.1.3.6.1.4.1.1248.3.1.3.1.7.18.0')}catch{$paper = $null}
                $strPaper = Out-String -InputObject $paper
                $strPaper = $strPaper.Trim()
                if($strPaper = '1'){$bPaper = $True}else{$bPaper = $False}
                $row."Out of Paper" = $bPaper

                $table.Rows.Add($row)
            }

            }
         }

    #for bad IP
    else{
        #Assign Error Output
        $printer = $printer + ": Printer not found or not responding"
        $printerName = "ERROR"
        $model = "ERROR"

        #Create a row and add row
        $rw = $table.NewRow()
        $rw."Printer Name" = $printerName
        $rw."Model" = $model
        $rw."IP Address" = $printer
        $table.Rows.Add($rw)
    }

}
#Close SNMP
$SNMP.Close()
#Export to CSV
foreach($row in $table){    
    ConvertTo-Csv $row -Delimiter "," -NoTypeInformation | Select-Object -Skip 1 | Add-Content -Path $Output
    }
 
